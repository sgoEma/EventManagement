<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <assignments>
        <name>Assign_JuncitonID_0</name>
        <label>Assign JuncitonID</label>
        <locationX>710</locationX>
        <locationY>1991</locationY>
        <assignmentItems>
            <assignToReference>$Record.JunctionID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CreateID</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Attendee_Registered</name>
        <label>Attendee Registered</label>
        <locationX>798</locationX>
        <locationY>671</locationY>
        <assignmentItems>
            <assignToReference>$Record.IsEventRegistered__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Is_Mandatory</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Overlapsed</name>
        <label>Set Overlapsed</label>
        <locationX>754</locationX>
        <locationY>1271</locationY>
        <assignmentItems>
            <assignToReference>$Record.IsOverlaps__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Set_Overlapsed_0</name>
        <label>Set Overlapsed</label>
        <locationX>138</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>$Record.IsOverlaps__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>Does_Overlaps</name>
        <label>Does Overlaps</label>
        <locationX>886</locationX>
        <locationY>1151</locationY>
        <defaultConnector>
            <targetReference>SREG_LOOP</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Overlapsed</name>
            <conditionLogic>(2 AND 1) OR (NOT(2) AND 3)</conditionLogic>
            <conditions>
                <leftValueReference>SREG_LOOP.Session__r.End_Date_Time__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Session__r.Start_Date_Time__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SREG_LOOP.Session__r.Start_Date_Time__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Session__r.Start_Date_Time__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SREG_LOOP.Session__r.Start_Date_Time__c</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>$Record.Session__r.End_Date_Time__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Overlapsed</targetReference>
            </connector>
            <label>Overlapsed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Mandatory</name>
        <label>Is Mandatory</label>
        <locationX>798</locationX>
        <locationY>791</locationY>
        <defaultConnector>
            <targetReference>Assign_JuncitonID_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Not_Mandatory</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Session__r.Is_Mandatory__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Session_Registrations</targetReference>
            </connector>
            <label>Not Mandatory</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Registered</name>
        <label>Is Registered</label>
        <locationX>952</locationX>
        <locationY>551</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Event_Registration</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Attendee_Registered</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Speaker_Overlapping</name>
        <label>Speaker Overlap</label>
        <locationX>270</locationX>
        <locationY>671</locationY>
        <defaultConnector>
            <targetReference>Speaker_Reg_Loop</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Overlapping</name>
            <conditionLogic>(2 AND 1) OR ( NOT(2) AND 3)</conditionLogic>
            <conditions>
                <leftValueReference>Speaker_Reg_Loop.Session__r.End_Date_Time__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>OneHourBefore</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Speaker_Reg_Loop.Session__r.Start_Date_Time__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>OneHourBefore</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Speaker_Reg_Loop.Session__r.Start_Date_Time__c</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>OneHourAfter</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Overlapsed_0</targetReference>
            </connector>
            <label>Overlapping</label>
        </rules>
    </decisions>
    <decisions>
        <name>Which_Record_Type</name>
        <label>Which Record Type?</label>
        <locationX>710</locationX>
        <locationY>311</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Speaker_Registration</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Speaker_Registration</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Related_Registrations</targetReference>
            </connector>
            <label>Speaker Registration</label>
        </rules>
        <rules>
            <name>Attendee_Registration</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Attendee_Registration</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Event_Registration</targetReference>
            </connector>
            <label>Attendee Registration</label>
        </rules>
    </decisions>
    <formulas>
        <description>Creates the junctionID</description>
        <name>CreateID</name>
        <dataType>String</dataType>
        <expression>Left({!$Record.Session__c},15)+Left({!$Record.Attendee__c},15)</expression>
    </formulas>
    <formulas>
        <name>OneHourAfter</name>
        <dataType>DateTime</dataType>
        <expression>{!$Record.Session__r.End_Date_Time__c} + (1/24)</expression>
    </formulas>
    <formulas>
        <name>OneHourBefore</name>
        <dataType>DateTime</dataType>
        <expression>{!$Record.Session__r.Start_Date_Time__c} - (1/24)</expression>
    </formulas>
    <interviewLabel>Session Registration Before Save Validations {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Before Save Session Registration Validations</label>
    <loops>
        <name>Speaker_Reg_Loop</name>
        <label>Speaker Reg Loop</label>
        <locationX>50</locationX>
        <locationY>551</locationY>
        <collectionReference>Get_Related_Registrations</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Speaker_Overlapping</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Assign_JuncitonID_0</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>SREG_LOOP</name>
        <label>SREG LOOP</label>
        <locationX>666</locationX>
        <locationY>1031</locationY>
        <collectionReference>Get_Session_Registrations</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Does_Overlaps</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Assign_JuncitonID_0</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Event_Registration</name>
        <label>Get Event Registration</label>
        <locationX>952</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Registered</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Contact__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Attendee__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Public_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Session__r.Public_Event__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Event_Registration__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Related_Registrations</name>
        <label>Get Related Registrations</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Speaker_Reg_Loop</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Attendee__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Attendee__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Session_Registration__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Session_Registrations</name>
        <label>Get Session Registrations</label>
        <locationX>666</locationX>
        <locationY>911</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SREG_LOOP</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Attendee__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Attendee__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Session_Registration__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>584</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Which_Record_Type</targetReference>
        </connector>
        <object>Session_Registration__c</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
